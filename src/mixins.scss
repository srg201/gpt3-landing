@use "sass:math";

$minWidth: 320;
$maxWidth: 1920;
$maxWidthContainer: 1170;

$containerPadding: 30;

$containerWidth: $maxWidthContainer + $containerPadding;

$pc: em($containerWidth);
$tablet: em(991.98);
$mobile: em(767.98);
$mobileSmall: em(479.98);
$responsiveType: 1;

//Percent
@function percent($px, $from) {
	$result: math.div($px, $from) * 100%;
	@return $result;
}
//REM
@function rem($px) {
	$result: math.div($px, 16) + rem;
	@return $result;
}
//EM
@function em($px, $current: 16) {
	$result: math.div($px, $current) + em;
	@return $result;
}



// // // Адаптивное свойство (clamp)
// @mixin adaptiveValue($property, $startSize, $minSize, $widthFrom: 1200px, $widthTo: 320px, $keepSize: 0) {
// 	@if ($startSize==0) {
// 		$startSize: 0.000001;
// 	}
// 	@if ($minSize==0) {
// 		$minSize: 0.000001;
// 	}

// 	// Для calc();
// 	$addSize: math.div($startSize - $minSize, 16);

// 	@if ($widthFrom == $containerWidth and $maxWidthContainer == 0) {
// 		$widthFrom: $maxWidth;
// 	}

// 	// Брейк-поинты в EM
// 	$widthFromMedia: em($widthFrom);
// 	$widthToMedia: em($widthTo);

// 	// Формула плавающего значения
// 	// Источник: https://css-tricks.com/linearly-scale-font-size-with-css-clamp-based-on-the-viewport/
// 	$slope: math.div(($startSize - $minSize), ($widthFrom - $widthTo));
// 	$yIntersection: -$widthTo * $slope + $minSize;
// 	@if ($yIntersection==0) {
// 		$yIntersection: 0.000001;
// 	}
// 	$flyValue: #{rem($yIntersection)}" + " #{$slope * 100}vw;

// 	// Получение значения свойства
// 	$propertyValue: #{"clamp(" rem($minSize) "," $flyValue "," rem($startSize) ")"};
// 	// Если отрицательные значения
// 	@if ($minSize > $startSize) {
// 		$propertyValue: #{"clamp(" rem($startSize) "," $flyValue "," rem($minSize) ")"};
// 	}

// 	// Если поддерживается clamp();
// 	@supports (#{$property}: $propertyValue) {
// 		#{$property}: $propertyValue;
// 	}
// 	// Если не поддерживается clamp();
// 	@supports not (#{$property}: $propertyValue) {
// 		#{$property}: calc(#{rem($minSize)} + #{$addSize} * (100vw - #{rem($widthTo)}) / #{math.div($widthFrom, 16) - math.div($widthTo, 16)});
// 	}

// 	// Устанавливаем значения по умолчанию
// 	@if $widthFrom != $containerWidth and $widthFrom != $maxWidth and $keepSize != 1 and $keepSize != 2 {
// 		@media (min-width: $widthFromMedia) {
// 			#{$property}: inherit;
// 		}
// 	}
// 	@if $widthTo != $minWidth and $keepSize != 1 and $keepSize != 3 {
// 		@media (max-width: $widthToMedia) {
// 			#{$property}: inherit;
// 		}
// 	}
// }
